openapi: 3.0.0
info:
  title: API de Gestión de Proyectos
  version: 1.0.0
  description: API completa para usuarios, clientes, proyectos y albaranes.

servers:
  - url: http://localhost:3000

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        role:
          type: string
        status:
          type: string

    Client:
      type: object
      properties:
        name:
          type: string

    Project:
      type: object
      properties:
        name:
          type: string
        clientId:
          type: string

    DeliveryNote:
      type: object
      properties:
        projectId:
          type: string
        entries:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              hours:
                type: number

security:
  - bearerAuth: {}

paths:
  /api/user/register:
    post:
      summary: Registro de usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario registrado
        '409':
          description: Email ya registrado

  /api/user/login:
    post:
      summary: Login de usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login exitoso

  /api/user/validate:
    put:
      summary: Validar email con código
      security:
        - bearerAuth: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
      responses:
        '200':
          description: Email validado

  /api/user:
    get:
      summary: Obtener usuario desde token
      security:
        - bearerAuth: {}
      responses:
        '200':
          description: Usuario obtenido

    delete:
      summary: Borrar usuario
      security:
        - bearerAuth: {}
      parameters:
        - in: query
          name: soft
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Usuario borrado

  /api/user/register:
    put:
      summary: Onboarding - datos personales
      security:
        - bearerAuth: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                lastname:
                  type: string
                nif:
                  type: string
      responses:
        '200':
          description: Datos actualizados

  /api/user/company:
    patch:
      summary: Onboarding - datos de compañía
      security:
        - bearerAuth: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                cif:
                  type: string
                address:
                  type: string
      responses:
        '200':
          description: Compañía actualizada

  /api/client:
    post:
      summary: Crear cliente
      security:
        - bearerAuth: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '201':
          description: Cliente creado

    get:
      summary: Obtener todos los clientes
      security:
        - bearerAuth: {}
      responses:
        '200':
          description: Lista de clientes

  /api/client/{id}:
    get:
      summary: Obtener cliente por ID
      security:
        - bearerAuth: {}
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cliente encontrado

  /api/project:
    post:
      summary: Crear proyecto
      security:
        - bearerAuth: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          description: Proyecto creado

    get:
      summary: Obtener todos los proyectos
      security:
        - bearerAuth: {}
      responses:
        '200':
          description: Lista de proyectos

  /api/project/{id}:
    get:
      summary: Obtener proyecto por ID
      security:
        - bearerAuth: {}
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Proyecto encontrado

    put:
      summary: Actualizar proyecto
      security:
        - bearerAuth: {}
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Proyecto actualizado

  /api/deliverynote:
    post:
      summary: Crear albarán
      security:
        - bearerAuth: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryNote'
      responses:
        '201':
          description: Albarán creado

    get:
      summary: Obtener todos los albaranes
      security:
        - bearerAuth: {}
      responses:
        '200':
          description: Lista de albaranes

  /api/deliverynote/{id}:
    get:
      summary: Obtener albarán por ID
      security:
        - bearerAuth: {}
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Albarán encontrado

  /api/deliverynote/pdf/{id}:
    get:
      summary: Descargar PDF del albarán
      security:
        - bearerAuth: {}
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: PDF generado
